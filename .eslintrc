{
  "ignorePatterns": [
    "/packages/landing/build/**",
    "/packages/firefox/bundle/**",
    "/packages/chromium/bundle/**"
  ],

  "root": true,
  "extends": ["standard", "prettier"],
  "reportUnusedDisableDirectives": true,

  "rules": {
    "import/order": [
      "error",
      { "alphabetize": { "order": "asc" }, "newlines-between": "always" }
    ],
    "no-unused-vars": [
      "error",
      { "varsIgnorePattern": "[iI]gnored", "argsIgnorePattern": "^_" }
    ],
    "curly": "error",
    "default-case": "error"
  },

  "overrides": [
    {
      "files": ["**/*.ts", "**/*.tsx"],
      "parser": "@typescript-eslint/parser",
      "parserOptions": {
        "project": "./tsconfig.json"
      },
      "plugins": ["@typescript-eslint"],
      "extends": [
        "plugin:@typescript-eslint/recommended",
        "plugin:@typescript-eslint/recommended-requiring-type-checking"
      ],
      "rules": {
        "@typescript-eslint/no-unused-vars": [
          "error",
          { "varsIgnorePattern": "[iI]gnored", "argsIgnorePattern": "^_" }
        ],
        "@typescript-eslint/explicit-module-boundary-types": "off",

        "no-void": ["error", { "allowAsStatement": true }],
        "@typescript-eslint/no-floating-promises": [
          "error",
          { "ignoreVoid": true }
        ],

        "no-use-before-define": "off",
        "@typescript-eslint/no-use-before-define": [
          "error",
          { "functions": false, "classes": false }
        ],

        "no-useless-constructor": "off",
        "@typescript-eslint/no-useless-constructor": "error"
      }
    },

    {
      "files": ["**/*.jsx", "**/*.tsx"],
      "extends": ["plugin:react-hooks/recommended"]
    },

    {
      "files": [
        "**/*.spec.ts",
        "**/*.spec.js",
        "**/__mocks__/**/*.ts",
        "**/__mocks__/**/*.js"
      ],
      "rules": {
        "@typescript-eslint/no-var-requires": "off",
        "@typescript-eslint/unbound-method": "off"
      }
    },

    {
      "files": ["**/*.js"],
      "rules": {
        "strict": ["error", "global"]
      }
    }
  ]
}
