name: CI

on: [push, pull_request]

jobs:
  lint:
    name: Linting
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 14

      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: |
            node_modules
            packages/landing/data
            packages/bundle/data
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}-v3

      - name: Install node_modules
        run: yarn --frozen-lockfile

      - name: Run ESLint / Prettier
        run: make --output-sync --jobs lint

      - name: Install additional dependencies
        run: make --jobs primary-deps
        env:
          MAXMIND_LICENSE_KEY: ${{ secrets.MAXMIND_LICENSE_KEY }}

  test:
    name: Unit-testing
    needs: lint
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 14

      - name: Restore caches
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: |
            node_modules
            packages/landing/data
            packages/bundle/data
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}-v3

      - name: Install node_modules
        run: yarn --frozen-lockfile

      - name: Run unit tests
        run: make --output-sync --jobs test
        env:
          MAXMIND_LICENSE_KEY: ${{ secrets.MAXMIND_LICENSE_KEY }}

      - name: Upload coverage to Coveralls.io
        if: ${{ always() }}
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload coverage to Codecov.io
        if: ${{ always() }}
        uses: codecov/codecov-action@v1

      - name: Upload report to Code Climate
        if: ${{ always() }}
        uses: paambaati/codeclimate-action@v2.7.5
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}

  build:
    name: Building
    needs: lint
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 14

      - name: Restore caches
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: |
            node_modules
            packages/landing/data
            packages/bundle/data
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}-v3

      - name: Install node_modules
        run: yarn --frozen-lockfile

      - name: Build Firefox & Chromium runtimes
        run: make --output-sync --jobs outdated build.firefox build.chromium
        env:
          MAXMIND_LICENSE_KEY: ${{ secrets.MAXMIND_LICENSE_KEY }}

      - name: Save Firefox artifacts
        uses: actions/upload-artifact@v2
        with:
          name: firefox-bundle
          path: packages/firefox/bundle/
          if-no-files-found: error

      - name: Save Chromium artifacts
        uses: actions/upload-artifact@v2
        with:
          name: chromium-bundle
          path: packages/chromium/bundle/
          if-no-files-found: error

      - name: Bundlewatch
        uses: jackyef/bundlewatch-gh-action@master
        with:
          bundlewatch-github-token: ${{ secrets.BUNDLEWATCH_GITHUB_TOKEN }}

  publish:
    name: Publishing
    if: github.ref == 'refs/heads/main'
    needs: [test, build]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 14

      - name: Restore caches
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: |
            node_modules
            packages/landing/data
            packages/bundle/data
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}-v3

      - name: Install node_modules
        run: yarn --frozen-lockfile

      - name: Download Firefox bundle
        uses: actions/download-artifact@v2
        with:
          name: firefox-bundle
          path: packages/firefox/bundle/

      - name: Download Chromium bundle
        uses: actions/download-artifact@v2
        with:
          name: chromium-bundle
          path: packages/chromium/bundle/

      - name: Zip
        run: make --output-sync --jobs packages/firefox/firefox.zip packages/chromium/chromium.zip

      - name: Update Release
        uses: johnwbyrd/update-release@v1.0.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          release: unstable
          files: packages/firefox/firefox.zip packages/chromium/chromium.zip
